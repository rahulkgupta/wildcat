directive @embedded on OBJECT
directive @collection(name: String!) on OBJECT
directive @index(name: String!) on FIELD_DEFINITION
directive @resolver(
  name: String
  paginated: Boolean! = false
) on FIELD_DEFINITION
directive @relation(name: String) on FIELD_DEFINITION
directive @unique(index: String) on FIELD_DEFINITION
type AccessToken {
  access_token: String
  # The document's ID.
  _id: ID!
  refresh_token: String
  token_type: String
  service: String
  expiry_date: Float
  # The document's timestamp.
  _ts: Long!
}

# 'AccessToken' input values
input AccessTokenInput {
  access_token: String
  refresh_token: String
  expiry_date: Float
  token_type: String
  service: String
}

scalar Date

# The `Long` scalar type represents non-fractional signed whole numeric values.
# Long can represent values between -(2^63) and 2^63 - 1.
scalar Long

type Mutation {
  # Create a new document in the collection of 'AccessToken'
  createAccessToken(
    # 'AccessToken' input values
    data: AccessTokenInput!
  ): AccessToken!
  # Update an existing document in the collection of 'AccessToken'
  updateAccessToken(
    # The 'AccessToken' document's ID
    id: ID!
    # 'AccessToken' input values
    data: AccessTokenInput!
  ): AccessToken
  # Delete an existing document in the collection of 'AccessToken'
  deleteAccessToken(
    # The 'AccessToken' document's ID
    id: ID!
  ): AccessToken
}

type Query {
  # Find a document from the collection of 'AccessToken' by its id.
  findAccessTokenByID(
    # The 'AccessToken' document's ID
    id: ID!
  ): AccessToken
  findAccessTokenByService(service: String): AccessToken
}

scalar Time

